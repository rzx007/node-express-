{
  "dataBindings": [
    {
      "attr": "xAxisData",
      "valueType": "Object"
    },
    {
      "attr": "dataset1",
      "valueType": "Object"
    },
    {
      "attr": "dataset2",
      "valueType": "Object"
    }
  ],
  "renderHTML": "__ht__function(data, gv, cache) {\n\n    var option = {\n        color: ['rgb(242,83,75)', 'rgb(242,83,75)'],\n        textStyle: {\n            color: 'rgb(222,222,222)',\n        },\n        tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n                type: 'shadow'\n            }\n        },\n        legend: {\n            show: true,\n            left: 'center',\n            right: 0,\n            top: '2%',\n            textStyle: {\n            color: 'rgb(222,222,222)',\n            }\n        },\n        grid: {\n            left: '3%',\n            right: '3%',\n            bottom: '3%',\n            top: '20%',\n            containLabel: true\n        },\n        xAxis: [{\n            data: [],\n            axisLine: {show: true},\n            splitLine: {show: false},\n            axisLabel: {\n            }\n        }],\n        yAxis: [\n            {\n                type: 'value',\n                name: '值',\n                min: 3,\n                max: 3.5,\n                axisLine: {show: true},\n                splitLine: {show: false},\n                axisLabel: {}\n            }\n        ],\n        series: [\n            {\n                name: '实际值',\n                type: 'line',\n                itemStyle: {\n                     color: new echarts.graphic.LinearGradient(\n                            0, 0, 0, 1,\n                            [\n                                {offset: 0, color: 'rgb(38,130,222)'},\n                                {offset: 1, color: 'rgb(50,181,217)'}\n                            ]\n                       )\n                },\n                data: []\n            },\n            {\n                name: '平均值',\n                type: 'line',\nsmooth:true,\n                data: []\n            }\n        ]\n    }\n\n    if (!cache.htmlView) {\n        cache.htmlView = document.createElement('div');\n        cache.htmlView.style.position = 'absolute';\n        cache.htmlChart = echarts.init(cache.htmlView);\n\n        // layoutHTML will be called when the data needs to be drawing\n        cache.htmlView.layoutHTML = function() {\n            gv.layoutHTML(data, cache.htmlView, false);\n            cache.htmlChart.resize();\n        };\n    }\n\n    // update data\n    option.series[0].data = data.a('dataset1');\n    option.series[1].data = data.a('dataset2');\n    option.xAxis[0].data = data.a('xAxisData');\n    cache.htmlChart.setOption(option);\n\n    // html for showing\n    return cache.htmlView;\n}ƒ",
  "width": 100,
  "height": 100,
  "comps": []
}